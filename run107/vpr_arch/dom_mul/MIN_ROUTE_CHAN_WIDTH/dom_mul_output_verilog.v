/* Generated by Yosys 0.27+3 (git sha1 b58664d44, gcc 11.3.0-1ubuntu1~22.04 -fPIC -Os) */

module dom_mul(ax, ay, bx, by, cx, cy, z0, z1, z2, clock, reset, aq, bq, cq);
  output aq;
  wire aq;
  input ax;
  wire ax;
  reg axay_reg;
  reg axby_xor_reg;
  reg axcy_xor_reg;
  input ay;
  wire ay;
  output bq;
  wire bq;
  input bx;
  wire bx;
  reg bxay_xor_reg;
  reg bxby_reg;
  reg bxcy_xor_reg;
  input by;
  wire by;
  input clock;
  wire clock;
  output cq;
  wire cq;
  input cx;
  wire cx;
  reg cxay_xor_reg;
  reg cxby_xor_reg;
  reg cxcy_reg;
  input cy;
  wire cy;
  wire n30;
  wire n35;
  wire n40;
  wire n45;
  wire n50;
  wire n55;
  wire n60;
  wire n65;
  wire n70;
  input reset;
  wire reset;
  input z0;
  wire z0;
  input z1;
  wire z1;
  input z2;
  wire z2;
  always @(posedge clock)
    axay_reg <= n30;
  always @(posedge clock)
    axby_xor_reg <= n35;
  always @(posedge clock)
    axcy_xor_reg <= n40;
  always @(posedge clock)
    bxby_reg <= n45;
  always @(posedge clock)
    bxay_xor_reg <= n50;
  always @(posedge clock)
    bxcy_xor_reg <= n55;
  always @(posedge clock)
    cxcy_reg <= n60;
  always @(posedge clock)
    cxay_xor_reg <= n65;
  always @(posedge clock)
    cxby_xor_reg <= n70;
  assign n70 = 16'h0708 >> { z2, reset, by, cx };
  assign n65 = 16'h0708 >> { z1, reset, ay, cx };
  assign n60 = 8'h40 >> { cx, cy, reset };
  assign n55 = 16'h0708 >> { z2, reset, cy, bx };
  assign n50 = 16'h0708 >> { z0, reset, ay, bx };
  assign n45 = 8'h40 >> { bx, by, reset };
  assign n40 = 16'h0708 >> { z1, reset, ax, cy };
  assign n35 = 16'h0708 >> { z0, reset, ax, by };
  assign n30 = 8'h40 >> { ay, ax, reset };
  assign aq = 8'h96 >> { axby_xor_reg, axcy_xor_reg, axay_reg };
  assign bq = 8'h96 >> { bxby_reg, bxay_xor_reg, bxcy_xor_reg };
  assign cq = 8'h96 >> { cxay_xor_reg, cxby_xor_reg, cxcy_reg };
endmodule
