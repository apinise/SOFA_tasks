//Verilog generated by VPR 8.1.0-dev+9e53e9a0a from post-place-and-route implementation
module maskmul (
    input \am[0] ,
    input \am[1] ,
    input \bm[0] ,
    input \bm[1] ,
    input \ma[0] ,
    input \ma[1] ,
    input \mb[0] ,
    input \mb[1] ,
    input \mq[0] ,
    input \mq[1] ,
    input \reset ,
    input \clock ,
    output \qm[0] ,
    output \qm[1] 
);

    //Wires
    wire \am[0]_output_0_0 ;
    wire \am[1]_output_0_0 ;
    wire \bm[0]_output_0_0 ;
    wire \bm[1]_output_0_0 ;
    wire \ma[0]_output_0_0 ;
    wire \ma[1]_output_0_0 ;
    wire \mb[0]_output_0_0 ;
    wire \mb[1]_output_0_0 ;
    wire \mq[0]_output_0_0 ;
    wire \mq[1]_output_0_0 ;
    wire \reset_output_0_0 ;
    wire \clock_output_0_0 ;
    wire \latch_qm[0]_output_0_0 ;
    wire \latch_qm[1]_output_0_0 ;
    wire \lut_n30_output_0_0 ;
    wire \lut_n34_output_0_0 ;
    wire \lut_$abc$138$new_n27__output_0_0 ;
    wire \lut_$abc$138$new_n28__output_0_0 ;
    wire \lut_$abc$138$new_n30__output_0_0 ;
    wire \lut_$abc$138$new_n31__output_0_0 ;
    wire \lut_$abc$138$new_n32__output_0_0 ;
    wire \lut_$abc$138$new_n33__output_0_0 ;
    wire \lut_$abc$138$new_n33__input_0_2 ;
    wire \lut_$abc$138$new_n28__input_0_0 ;
    wire \lut_$abc$138$new_n32__input_0_3 ;
    wire \lut_$abc$138$new_n27__input_0_2 ;
    wire \lut_$abc$138$new_n30__input_0_0 ;
    wire \lut_$abc$138$new_n28__input_0_1 ;
    wire \lut_$abc$138$new_n31__input_0_1 ;
    wire \lut_$abc$138$new_n27__input_0_1 ;
    wire \lut_$abc$138$new_n33__input_0_3 ;
    wire \lut_$abc$138$new_n28__input_0_3 ;
    wire \lut_$abc$138$new_n32__input_0_2 ;
    wire \lut_$abc$138$new_n27__input_0_0 ;
    wire \lut_$abc$138$new_n30__input_0_2 ;
    wire \lut_$abc$138$new_n28__input_0_2 ;
    wire \lut_$abc$138$new_n31__input_0_2 ;
    wire \lut_$abc$138$new_n27__input_0_3 ;
    wire \lut_n30_input_0_1 ;
    wire \lut_$abc$138$new_n33__input_0_1 ;
    wire \lut_n34_input_0_0 ;
    wire \lut_n30_input_0_2 ;
    wire \latch_qm[1]_clock_0_0 ;
    wire \latch_qm[0]_clock_0_0 ;
    wire \qm[0]_input_0_0 ;
    wire \qm[1]_input_0_0 ;
    wire \latch_qm[0]_input_0_0 ;
    wire \latch_qm[1]_input_0_0 ;
    wire \lut_n30_input_0_0 ;
    wire \lut_n30_input_0_3 ;
    wire \lut_$abc$138$new_n32__input_0_1 ;
    wire \lut_$abc$138$new_n33__input_0_0 ;
    wire \lut_$abc$138$new_n32__input_0_0 ;
    wire \lut_n34_input_0_2 ;
    wire \lut_n34_input_0_1 ;

    //IO assignments
    assign \qm[0]  = \qm[0]_input_0_0 ;
    assign \qm[1]  = \qm[1]_input_0_0 ;
    assign \am[0]_output_0_0  = \am[0] ;
    assign \am[1]_output_0_0  = \am[1] ;
    assign \bm[0]_output_0_0  = \bm[0] ;
    assign \bm[1]_output_0_0  = \bm[1] ;
    assign \ma[0]_output_0_0  = \ma[0] ;
    assign \ma[1]_output_0_0  = \ma[1] ;
    assign \mb[0]_output_0_0  = \mb[0] ;
    assign \mb[1]_output_0_0  = \mb[1] ;
    assign \mq[0]_output_0_0  = \mq[0] ;
    assign \mq[1]_output_0_0  = \mq[1] ;
    assign \reset_output_0_0  = \reset ;
    assign \clock_output_0_0  = \clock ;

    //Interconnect
    fpga_interconnect \routing_segment_am[0]_output_0_0_to_lut_$abc$138$new_n33__input_0_2  (
        .datain(\am[0]_output_0_0 ),
        .dataout(\lut_$abc$138$new_n33__input_0_2 )
    );

    fpga_interconnect \routing_segment_am[0]_output_0_0_to_lut_$abc$138$new_n28__input_0_0  (
        .datain(\am[0]_output_0_0 ),
        .dataout(\lut_$abc$138$new_n28__input_0_0 )
    );

    fpga_interconnect \routing_segment_am[1]_output_0_0_to_lut_$abc$138$new_n32__input_0_3  (
        .datain(\am[1]_output_0_0 ),
        .dataout(\lut_$abc$138$new_n32__input_0_3 )
    );

    fpga_interconnect \routing_segment_am[1]_output_0_0_to_lut_$abc$138$new_n27__input_0_2  (
        .datain(\am[1]_output_0_0 ),
        .dataout(\lut_$abc$138$new_n27__input_0_2 )
    );

    fpga_interconnect \routing_segment_bm[0]_output_0_0_to_lut_$abc$138$new_n30__input_0_0  (
        .datain(\bm[0]_output_0_0 ),
        .dataout(\lut_$abc$138$new_n30__input_0_0 )
    );

    fpga_interconnect \routing_segment_bm[0]_output_0_0_to_lut_$abc$138$new_n28__input_0_1  (
        .datain(\bm[0]_output_0_0 ),
        .dataout(\lut_$abc$138$new_n28__input_0_1 )
    );

    fpga_interconnect \routing_segment_bm[1]_output_0_0_to_lut_$abc$138$new_n31__input_0_1  (
        .datain(\bm[1]_output_0_0 ),
        .dataout(\lut_$abc$138$new_n31__input_0_1 )
    );

    fpga_interconnect \routing_segment_bm[1]_output_0_0_to_lut_$abc$138$new_n27__input_0_1  (
        .datain(\bm[1]_output_0_0 ),
        .dataout(\lut_$abc$138$new_n27__input_0_1 )
    );

    fpga_interconnect \routing_segment_ma[0]_output_0_0_to_lut_$abc$138$new_n33__input_0_3  (
        .datain(\ma[0]_output_0_0 ),
        .dataout(\lut_$abc$138$new_n33__input_0_3 )
    );

    fpga_interconnect \routing_segment_ma[0]_output_0_0_to_lut_$abc$138$new_n28__input_0_3  (
        .datain(\ma[0]_output_0_0 ),
        .dataout(\lut_$abc$138$new_n28__input_0_3 )
    );

    fpga_interconnect \routing_segment_ma[1]_output_0_0_to_lut_$abc$138$new_n32__input_0_2  (
        .datain(\ma[1]_output_0_0 ),
        .dataout(\lut_$abc$138$new_n32__input_0_2 )
    );

    fpga_interconnect \routing_segment_ma[1]_output_0_0_to_lut_$abc$138$new_n27__input_0_0  (
        .datain(\ma[1]_output_0_0 ),
        .dataout(\lut_$abc$138$new_n27__input_0_0 )
    );

    fpga_interconnect \routing_segment_mb[0]_output_0_0_to_lut_$abc$138$new_n30__input_0_2  (
        .datain(\mb[0]_output_0_0 ),
        .dataout(\lut_$abc$138$new_n30__input_0_2 )
    );

    fpga_interconnect \routing_segment_mb[0]_output_0_0_to_lut_$abc$138$new_n28__input_0_2  (
        .datain(\mb[0]_output_0_0 ),
        .dataout(\lut_$abc$138$new_n28__input_0_2 )
    );

    fpga_interconnect \routing_segment_mb[1]_output_0_0_to_lut_$abc$138$new_n31__input_0_2  (
        .datain(\mb[1]_output_0_0 ),
        .dataout(\lut_$abc$138$new_n31__input_0_2 )
    );

    fpga_interconnect \routing_segment_mb[1]_output_0_0_to_lut_$abc$138$new_n27__input_0_3  (
        .datain(\mb[1]_output_0_0 ),
        .dataout(\lut_$abc$138$new_n27__input_0_3 )
    );

    fpga_interconnect \routing_segment_mq[0]_output_0_0_to_lut_n30_input_0_1  (
        .datain(\mq[0]_output_0_0 ),
        .dataout(\lut_n30_input_0_1 )
    );

    fpga_interconnect \routing_segment_mq[1]_output_0_0_to_lut_$abc$138$new_n33__input_0_1  (
        .datain(\mq[1]_output_0_0 ),
        .dataout(\lut_$abc$138$new_n33__input_0_1 )
    );

    fpga_interconnect \routing_segment_reset_output_0_0_to_lut_n34_input_0_0  (
        .datain(\reset_output_0_0 ),
        .dataout(\lut_n34_input_0_0 )
    );

    fpga_interconnect \routing_segment_reset_output_0_0_to_lut_n30_input_0_2  (
        .datain(\reset_output_0_0 ),
        .dataout(\lut_n30_input_0_2 )
    );

    fpga_interconnect \routing_segment_clock_output_0_0_to_latch_qm[1]_clock_0_0  (
        .datain(\clock_output_0_0 ),
        .dataout(\latch_qm[1]_clock_0_0 )
    );

    fpga_interconnect \routing_segment_clock_output_0_0_to_latch_qm[0]_clock_0_0  (
        .datain(\clock_output_0_0 ),
        .dataout(\latch_qm[0]_clock_0_0 )
    );

    fpga_interconnect \routing_segment_latch_qm[0]_output_0_0_to_qm[0]_input_0_0  (
        .datain(\latch_qm[0]_output_0_0 ),
        .dataout(\qm[0]_input_0_0 )
    );

    fpga_interconnect \routing_segment_latch_qm[1]_output_0_0_to_qm[1]_input_0_0  (
        .datain(\latch_qm[1]_output_0_0 ),
        .dataout(\qm[1]_input_0_0 )
    );

    fpga_interconnect \routing_segment_lut_n30_output_0_0_to_latch_qm[0]_input_0_0  (
        .datain(\lut_n30_output_0_0 ),
        .dataout(\latch_qm[0]_input_0_0 )
    );

    fpga_interconnect \routing_segment_lut_n34_output_0_0_to_latch_qm[1]_input_0_0  (
        .datain(\lut_n34_output_0_0 ),
        .dataout(\latch_qm[1]_input_0_0 )
    );

    fpga_interconnect \routing_segment_lut_$abc$138$new_n27__output_0_0_to_lut_n30_input_0_0  (
        .datain(\lut_$abc$138$new_n27__output_0_0 ),
        .dataout(\lut_n30_input_0_0 )
    );

    fpga_interconnect \routing_segment_lut_$abc$138$new_n28__output_0_0_to_lut_n30_input_0_3  (
        .datain(\lut_$abc$138$new_n28__output_0_0 ),
        .dataout(\lut_n30_input_0_3 )
    );

    fpga_interconnect \routing_segment_lut_$abc$138$new_n30__output_0_0_to_lut_$abc$138$new_n32__input_0_1  (
        .datain(\lut_$abc$138$new_n30__output_0_0 ),
        .dataout(\lut_$abc$138$new_n32__input_0_1 )
    );

    fpga_interconnect \routing_segment_lut_$abc$138$new_n31__output_0_0_to_lut_$abc$138$new_n33__input_0_0  (
        .datain(\lut_$abc$138$new_n31__output_0_0 ),
        .dataout(\lut_$abc$138$new_n33__input_0_0 )
    );

    fpga_interconnect \routing_segment_lut_$abc$138$new_n31__output_0_0_to_lut_$abc$138$new_n32__input_0_0  (
        .datain(\lut_$abc$138$new_n31__output_0_0 ),
        .dataout(\lut_$abc$138$new_n32__input_0_0 )
    );

    fpga_interconnect \routing_segment_lut_$abc$138$new_n32__output_0_0_to_lut_n34_input_0_2  (
        .datain(\lut_$abc$138$new_n32__output_0_0 ),
        .dataout(\lut_n34_input_0_2 )
    );

    fpga_interconnect \routing_segment_lut_$abc$138$new_n33__output_0_0_to_lut_n34_input_0_1  (
        .datain(\lut_$abc$138$new_n33__output_0_0 ),
        .dataout(\lut_n34_input_0_1 )
    );


    //Cell instances
    LUT_K #(
        .K(3),
        .LUT_MASK(8'b00010010)
    ) \lut_$abc$138$new_n30_  (
        .in({
            \lut_$abc$138$new_n30__input_0_2 ,
            1'bX,
            \lut_$abc$138$new_n30__input_0_0 
         }),
        .out(\lut_$abc$138$new_n30__output_0_0 )
    );

    LUT_K #(
        .K(3),
        .LUT_MASK(8'b00010100)
    ) \lut_n34  (
        .in({
            \lut_n34_input_0_2 ,
            \lut_n34_input_0_1 ,
            \lut_n34_input_0_0 
         }),
        .out(\lut_n34_output_0_0 )
    );

    DFF #(
        .INITIAL_VALUE(1'b0)
    ) \latch_qm[1]  (
        .D(\latch_qm[1]_input_0_0 ), 
        .Q(\latch_qm[1]_output_0_0 ), 
        .clock(\latch_qm[1]_clock_0_0 )
    );
    LUT_K #(
        .K(3),
        .LUT_MASK(8'b00010100)
    ) \lut_$abc$138$new_n31_  (
        .in({
            \lut_$abc$138$new_n31__input_0_2 ,
            \lut_$abc$138$new_n31__input_0_1 ,
            1'bX
         }),
        .out(\lut_$abc$138$new_n31__output_0_0 )
    );

    LUT_K #(
        .K(4),
        .LUT_MASK(16'b1100011001101100)
    ) \lut_$abc$138$new_n33_  (
        .in({
            \lut_$abc$138$new_n33__input_0_3 ,
            \lut_$abc$138$new_n33__input_0_2 ,
            \lut_$abc$138$new_n33__input_0_1 ,
            \lut_$abc$138$new_n33__input_0_0 
         }),
        .out(\lut_$abc$138$new_n33__output_0_0 )
    );

    LUT_K #(
        .K(4),
        .LUT_MASK(16'b0000011001100000)
    ) \lut_$abc$138$new_n32_  (
        .in({
            \lut_$abc$138$new_n32__input_0_3 ,
            \lut_$abc$138$new_n32__input_0_2 ,
            \lut_$abc$138$new_n32__input_0_1 ,
            \lut_$abc$138$new_n32__input_0_0 
         }),
        .out(\lut_$abc$138$new_n32__output_0_0 )
    );

    LUT_K #(
        .K(4),
        .LUT_MASK(16'b0001010000101000)
    ) \lut_$abc$138$new_n28_  (
        .in({
            \lut_$abc$138$new_n28__input_0_3 ,
            \lut_$abc$138$new_n28__input_0_2 ,
            \lut_$abc$138$new_n28__input_0_1 ,
            \lut_$abc$138$new_n28__input_0_0 
         }),
        .out(\lut_$abc$138$new_n28__output_0_0 )
    );

    LUT_K #(
        .K(4),
        .LUT_MASK(16'b0001001001001000)
    ) \lut_$abc$138$new_n27_  (
        .in({
            \lut_$abc$138$new_n27__input_0_3 ,
            \lut_$abc$138$new_n27__input_0_2 ,
            \lut_$abc$138$new_n27__input_0_1 ,
            \lut_$abc$138$new_n27__input_0_0 
         }),
        .out(\lut_$abc$138$new_n27__output_0_0 )
    );

    LUT_K #(
        .K(4),
        .LUT_MASK(16'b0000100100000110)
    ) \lut_n30  (
        .in({
            \lut_n30_input_0_3 ,
            \lut_n30_input_0_2 ,
            \lut_n30_input_0_1 ,
            \lut_n30_input_0_0 
         }),
        .out(\lut_n30_output_0_0 )
    );

    DFF #(
        .INITIAL_VALUE(1'b0)
    ) \latch_qm[0]  (
        .D(\latch_qm[0]_input_0_0 ), 
        .Q(\latch_qm[0]_output_0_0 ), 
        .clock(\latch_qm[0]_clock_0_0 )
    );

endmodule
